package com.auction.commons.security;

import org.springframework.security.crypto.bcrypt.BCrypt;

public class PasswordSecurity {

	/**
	 * This method is used to get system generated unique password salt string
	 * 
	 * @return it will return system generated unique password salt string
	 */
	public static String generatePasswordSalt() {
		return BCrypt.gensalt();
	}

	/**
	 * While registration this method helps to encrypt plain-password entered by
	 * user with unique password salt generated by system.
	 * 
	 * @param plainPassword
	 *            pass plain-password entered by the user
	 * @param passwordSalt
	 *            pass password salt of the user
	 * @return it will return encrypted password, encrypted by system with system
	 *         generated unique password salt
	 * 
	 */
	public static String generateSecuredPassword(String plainPassword, String passwordSalt) {
		return BCrypt.hashpw(plainPassword, passwordSalt);
	}

	/**
	 * While login authentication this method will help to verify that the provided
	 * password by user is correct or incorrect.
	 * 
	 * @param plainPassword
	 *            pass plain-password entered by the user
	 * @param securedPassword
	 *            pass stored password into database for the user.
	 * @return the value {@code true} if password is correct as per secured password
	 *         otherwise given password by user is incorrect if {@code false}
	 * 
	 */
	public static boolean isValidPassword(String plainPassword, String securedPassword) {
		return BCrypt.checkpw(plainPassword, securedPassword);
	}

}